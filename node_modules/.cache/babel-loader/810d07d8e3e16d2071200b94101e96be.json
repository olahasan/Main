{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/olaal/Desktop/ppp_-_Copy_-_Copy__2_/ppp - Copy - Copy/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/olaal/Desktop/ppp_-_Copy_-_Copy__2_/ppp - Copy - Copy/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/olaal/Desktop/ppp_-_Copy_-_Copy__2_/ppp - Copy - Copy/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.css\";// when we import Main/Search file we do not need write {Main} or {Search} because it came from export default  not export and './' refers to SRC folder\nimport Main from'./Components/MainPage/Main';import Search from'./Components/SearchPage/Search';/* \nto use { Route , Routes } you should firstly write in terminal npm install react-router-dom \nthen import them from \"react-router-dom\" .\n-we use Routes to work as a parent for every single Route \n-Route is refers to a child and every Route should be wrapped in Routes\n*/import{Route,Routes}from\"react-router-dom\";// in our project we will use Hooks so we need to use useState instead of state  and useEffect instead of ComponentDidMount or all lifeCycle\nimport{useState,useEffect}from\"react\";// * allow us to access each item in the BooksAPI and we should import it before using it\nimport*as BooksAPI from'./BooksAPI';/* \nwe will use function component instead of class based component\nand using hooks will help us to use state an lifecycle inside function component\nbut in the form of useState and useEffect\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){// we will use setstate create a state 'All' with initial value an empty array\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),All=_useState2[0],setAll=_useState2[1];// Get \n/*\n    - we will create a function and get the data inside it using a way from many ways\n      (async/await) - (then/catch) - (fetch) ...\n    - we will update state using setAll  and instead of empty array it will equel res \n    -do not forget to call the function at the end \n  */var GetAllBooks=function GetAllBooks(){var getContacts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return BooksAPI.getAll();case 2:res=_context.sent;setAll(res);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getContacts(){return _ref.apply(this,arguments);};}();getContacts();// BooksAPI.getAll().then((res) => {\n//   setAll( res );\n// });\n};/*\n    - i wanna say after the component render and every thing is okay \n      then call the function which we create it in line  36  \n    - if we were using class based componet that will be ComponentDidMount/lifecycle\n    - but now in function component and with Hooks it called useEffect\n    - we should use empty array to prevent infinite loop\n  */useEffect(function(){GetAllBooks();},[]);// Update \n// - i will update the data which i got it in line 36 using BooksAPI.update for update \nvar Update=function Update(book,shelf){BooksAPI.update(book,shelf).then(function(updateBooks){GetAllBooks();});};// we do not need to write a render() because it is a function component\nreturn/*#__PURE__*/ (/*\n      - because we write a jsx we should wrap  all elements inside one parent\n      - before using Routes and Route we should wrap App.js in BrowserRourer which is in index.js file\n      - path=\"/\" refers to home  and path=\"/Search\" refers to search component\n      - element refers to component which will appear on screen when the path match with its url\n      -inside every component should i pass state and books after updated(Update) as props and i will receive it inside component page\n      */_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Main,{All:All,Update:Update})}),/*#__PURE__*/_jsx(Route,{path:\"/Search\",element:/*#__PURE__*/_jsx(Search,{All:All,Update:Update})})]})}));};// Do not forget export App by using export default \n// and import it in index.js inside root element\nexport default App;","map":{"version":3,"sources":["C:/Users/olaal/Desktop/ppp_-_Copy_-_Copy__2_/ppp - Copy - Copy/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/src/App.js"],"names":["Main","Search","Route","Routes","useState","useEffect","BooksAPI","App","All","setAll","GetAllBooks","getContacts","getAll","res","Update","book","shelf","update","then","updateBooks"],"mappings":"8rBAAA,MAAO,WAAP,CACA;AACA,MAAOA,CAAAA,IAAP,KAAiB,4BAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASC,KAAT,CAAiBC,MAAjB,KAA+B,kBAA/B,CACA;AACA,OAASC,QAAT,CAAoBC,SAApB,KAAqC,OAArC,CACA;AACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,YAA1B,CAGA;AACA;AACA;AACA;AACA,E,wFACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEhB;AAFgB,cAGSH,QAAQ,CAAC,EAAD,CAHjB,wCAGRI,GAHQ,eAGFC,MAHE,eAMlB;AACE;AACF;AACA;AACA;AACA;AACA,IACA,GAAMC,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,EAAM,CACnB,GAAMC,CAAAA,WAAW,0FAAG,iKACFL,CAAAA,QAAQ,CAACM,MAAT,EADE,QACdC,GADc,eAEpBJ,MAAM,CAACI,GAAD,CAAN,CAFoB,sDAAH,kBAAXF,CAAAA,WAAW,0CAAjB,CAIFA,WAAW,GAEb;AACA;AACA;AACD,CAVD,CAYE;AACF;AACA;AACA;AACA;AACA;AACA,IACAN,SAAS,CAAC,UAAI,CACZK,WAAW,GACZ,CAFQ,CAEP,EAFO,CAAT,CAMC;AACG;AACH,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/BV,QAAQ,CAACW,MAAT,CAAgBF,IAAhB,CAAsBC,KAAtB,EAA6BE,IAA7B,CAAkC,SAAAC,WAAW,CAAI,CAC/CT,WAAW,GACZ,CAFD,EAGA,CAJD,CAMC;AACA,oBACE;AACJ;AACA;AACA;AACA;AACA;AACA,QACI,YAAK,SAAS,CAAC,KAAf,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,IAAD,EAAM,GAAG,CAAEF,GAAX,CAAiB,MAAM,CAAEM,MAAzB,EAAzB,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,OAAO,cAAE,KAAC,MAAD,EAAS,GAAG,CAAEN,GAAd,CAAmB,MAAM,CAAEM,MAA3B,EAA/B,EAFF,GADF,EARF,EAeD,CA9DD,CAmEA;AACA;AACA,cAAeP,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\n// when we import Main/Search file we do not need write {Main} or {Search} because it came from export default  not export and './' refers to SRC folder\nimport Main from './Components/MainPage/Main'\nimport Search from './Components/SearchPage/Search'\n/* \nto use { Route , Routes } you should firstly write in terminal npm install react-router-dom \nthen import them from \"react-router-dom\" .\n-we use Routes to work as a parent for every single Route \n-Route is refers to a child and every Route should be wrapped in Routes\n*/\nimport { Route , Routes } from \"react-router-dom\";\n// in our project we will use Hooks so we need to use useState instead of state  and useEffect instead of ComponentDidMount or all lifeCycle\nimport { useState , useEffect } from \"react\";\n// * allow us to access each item in the BooksAPI and we should import it before using it\nimport * as BooksAPI from './BooksAPI'\n\n\n/* \nwe will use function component instead of class based component\nand using hooks will help us to use state an lifecycle inside function component\nbut in the form of useState and useEffect\n*/\nconst App = () => {\n\n  // we will use setstate create a state 'All' with initial value an empty array\n   const [All , setAll]  = useState([])\n\n\n// Get \n  /*\n    - we will create a function and get the data inside it using a way from many ways\n      (async/await) - (then/catch) - (fetch) ...\n    - we will update state using setAll  and instead of empty array it will equel res \n    -do not forget to call the function at the end \n  */\nconst GetAllBooks =() => {\n      const getContacts = async () => {\n      const res = await BooksAPI.getAll();\n      setAll(res);\n    }\n    getContacts()\n\n  // BooksAPI.getAll().then((res) => {\n  //   setAll( res );\n  // });\n}\n\n  /*\n    - i wanna say after the component render and every thing is okay \n      then call the function which we create it in line  36  \n    - if we were using class based componet that will be ComponentDidMount/lifecycle\n    - but now in function component and with Hooks it called useEffect\n    - we should use empty array to prevent infinite loop\n  */\nuseEffect(()=>{\n  GetAllBooks()\n},[])\n\n\n\n // Update \n    // - i will update the data which i got it in line 36 using BooksAPI.update for update \n const Update = (book, shelf) => {\n  BooksAPI.update(book, shelf).then(updateBooks => {\n    GetAllBooks();\n  })\n }\n\n  // we do not need to write a render() because it is a function component\n  return (\n    /*\n      - because we write a jsx we should wrap  all elements inside one parent\n      - before using Routes and Route we should wrap App.js in BrowserRourer which is in index.js file\n      - path=\"/\" refers to home  and path=\"/Search\" refers to search component\n      - element refers to component which will appear on screen when the path match with its url\n      -inside every component should i pass state and books after updated(Update) as props and i will receive it inside component page\n      */\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<Main All={All}  Update={Update}/>} />\n        <Route path=\"/Search\" element={<Search  All={All} Update={Update}/>} />\n      </Routes>\n    </div>\n  );\n}\n\n\n\n\n// Do not forget export App by using export default \n// and import it in index.js inside root element\nexport default App \n"]},"metadata":{},"sourceType":"module"}