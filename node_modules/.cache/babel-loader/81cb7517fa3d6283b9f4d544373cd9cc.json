{"ast":null,"code":"import React from\"react\";/*\r\n  - import all components which i want to appear on main page screen\r\n  - ./ refers to  too close to Main.js\r\n  - ../ refers to  far from  Main.js so we use ../ to go out from MainPage folder \r\n        and be inside in Components folder and then decide folder which\r\n         i need to open and choose the file from it\r\n*/import Header from\"../Header/Header\";// import Currently from './CurrentlyBookShelf'\n// import Want from './WantBookShelf'\n// import Read from './ReadBookShelf'\nimport Shelf from'./Shelf';import SearchIcon from'../SearchIcon/SearchIcon';/* \r\n  - we will use function component instead of class based component  so we do not need Render()\r\n  - we can write  Main = (props)   or   Main = ({All , Update})\r\n  - if we write it like  Main = (props) we receive props like this All={props.All}\r\n  - but if write it like  Main = ({All , Update}) we receive props like this All={All}\r\n*/ // we receive props here from App\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(_ref){var All=_ref.All,Update=_ref.Update;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"list-books\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"list-books-content\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Shelf,{Name:\"Currently Reading\",Id:\"currentlyReading\",All:All.filter(function(book){return book.shelf==='currentlyReading';}),Update:Update}),/*#__PURE__*/_jsx(Shelf,{Name:\"Want to Read\",Id:\"wantToRead\",All:All.filter(function(book){return book.shelf==='wantToRead';}),Update:Update}),/*#__PURE__*/_jsx(Shelf,{Name:\"Read\",Id:\"read\",All:All.filter(function(book){return book.shelf==='read';}),Update:Update})]})}),/*#__PURE__*/_jsx(SearchIcon,{})]})});};// Do not forget export Main by using export default and import it in App.js \nexport default Main;","map":{"version":3,"sources":["C:/Users/olaal/Desktop/reader-app/src/Components/MainPage/Main.js"],"names":["React","Header","Shelf","SearchIcon","Main","All","Update","filter","book","shelf"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA;AACA;AACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CAIA;AACA;AACA;AACA;AACA;AACA,E,CACA;wFACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAoB,IAAlBC,CAAAA,GAAkB,MAAlBA,GAAkB,CAAZC,MAAY,MAAZA,MAAY,CAE7B,mBACE,kCACE,aAAK,SAAS,CAAC,YAAf,wBACE,KAAC,MAAD,IADF,cAGE,YAAK,SAAS,CAAC,oBAAf,uBACE,oCAYE,KAAC,KAAD,EAAO,IAAI,CAAC,mBAAZ,CAAgC,EAAE,CAAC,kBAAnC,CAAuD,GAAG,CAAED,GAAG,CAACE,MAAJ,CAAW,SAACC,IAAD,QAAQA,CAAAA,IAAI,CAACC,KAAL,GAAe,kBAAvB,EAAX,CAA5D,CAAqH,MAAM,CAAEH,MAA7H,EAZF,cAaE,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,CAAgC,EAAE,CAAC,YAAnC,CAAuD,GAAG,CAAED,GAAG,CAACE,MAAJ,CAAW,SAACC,IAAD,QAAQA,CAAAA,IAAI,CAACC,KAAL,GAAe,YAAvB,EAAX,CAA5D,CAAqH,MAAM,CAAEH,MAA7H,EAbF,cAcE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAgC,EAAE,CAAC,MAAnC,CAAuD,GAAG,CAAED,GAAG,CAACE,MAAJ,CAAW,SAACC,IAAD,QAAQA,CAAAA,IAAI,CAACC,KAAL,GAAe,MAAvB,EAAX,CAA5D,CAAqH,MAAM,CAAEH,MAA7H,EAdF,GADF,EAHF,cAuBE,KAAC,UAAD,IAvBF,GADF,EADF,CA6BH,CA/BD,CAkCA;AACA,cAAeF,CAAAA,IAAf","sourcesContent":["import React from \"react\";\r\n/*\r\n  - import all components which i want to appear on main page screen\r\n  - ./ refers to  too close to Main.js\r\n  - ../ refers to  far from  Main.js so we use ../ to go out from MainPage folder \r\n        and be inside in Components folder and then decide folder which\r\n         i need to open and choose the file from it\r\n*/\r\nimport Header from \"../Header/Header\"\r\n// import Currently from './CurrentlyBookShelf'\r\n// import Want from './WantBookShelf'\r\n// import Read from './ReadBookShelf'\r\nimport Shelf from './Shelf'\r\nimport SearchIcon from '../SearchIcon/SearchIcon'\r\n\r\n\r\n\r\n/* \r\n  - we will use function component instead of class based component  so we do not need Render()\r\n  - we can write  Main = (props)   or   Main = ({All , Update})\r\n  - if we write it like  Main = (props) we receive props like this All={props.All}\r\n  - but if write it like  Main = ({All , Update}) we receive props like this All={All}\r\n*/\r\n// we receive props here from App\r\nconst Main = ({All , Update}) => {\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"list-books\">\r\n          <Header />\r\n\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n               {/* we pass all props which we received them from app\r\n                to each component(if required) as props\r\n                to receive them on each page separately\r\n                but we can avoid that (transmission from father to child to child to child) \r\n                by using redux or usecontext */}\r\n\r\n              {/* <Currently  All={All} Update={Update}/>\r\n                  <Want  All={All} Update={Update}/>\r\n                  <Read  All={All} Update={Update}/> */}\r\n\r\n\r\n              <Shelf Name='Currently Reading' Id='currentlyReading'  All={All.filter((book)=>book.shelf === 'currentlyReading')}   Update={Update}/>\r\n              <Shelf Name='Want to Read'      Id='wantToRead'        All={All.filter((book)=>book.shelf === 'wantToRead')}         Update={Update}/>\r\n              <Shelf Name='Read'              Id='read'              All={All.filter((book)=>book.shelf === 'read')}               Update={Update}/>\r\n            \r\n            </div>\r\n          </div>\r\n\r\n          <SearchIcon />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n// Do not forget export Main by using export default and import it in App.js \r\nexport default Main"]},"metadata":{},"sourceType":"module"}